networks:
  network:
    driver: bridge

services:
  spring:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring
    ports:
      - "8080:8080"
    networks:
      - network
    depends_on:
      - mysql
      - mongo
      - redis
      - rabbitmq
#      - nginx

  redis:
    image: "redis:7.0"
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - network

  mongo:
    image: "mongo:latest"
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      TZ: Asia/Seoul
    volumes:
      - /var/lib/volumes/mongo:/data/db
#      - /home/ubuntu/volumes/mongo:/data/db
    networks:
      - network

  mysql:
    image: "mysql:8.0"
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
        TZ: Asia/Seoul
        MYSQL_HOST: mysql
        MYSQL_PORT: 3306
        MYSQL_ROOT_PASSWORD: 0623
        MYSQL_DATABASE: ForPaw
    volumes:
      - /var/lib/volumes/mysql:/var/lib/mysql
#      - /home/ubuntu/volumes/mysql:/var/lib/mysql
    networks:
      - network

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" # RabbitMQ 관리 콘솔
      - "61613:61613" # STOMP 프로토콜 포트
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    command: >
      bash -c "rabbitmq-plugins enable rabbitmq_stomp && rabbitmq-server"
    networks:
      - network

  fastapi:
    build:
      context: ./FastAPI
      dockerfile: Dockerfile
    container_name: fast
    ports:
      - "8000:8000"
    networks:
      - network
    depends_on:
      - spring

#  nginx:
#    image: nginx:1.21.5-alpine
#    container_name: nginx
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - /home/ubuntu/nginx/nginx.conf:/etc/nginx/nginx.conf
#      - /home/ubuntu/certbot-etc:/etc/letsencrypt
#      - /home/ubuntu/myweb:/usr/share/nginx/html
#    networks:
#      - network

#  certbot:
#    depends_on:
#      - nginx
#    image: certbot/certbot
#    container_name: certbot
#    volumes:
#      - /home/ubuntu/certbot-etc:/etc/letsencrypt
#      - /home/ubuntu/myweb:/usr/share/nginx/html
#    command: certonly --webroot --webroot-path=/usr/share/nginx/html --email ygsdfsd@pusan.ac.kr --agree-tos --no-eff-email --keep-until-expiring -d www.forpaw.site
