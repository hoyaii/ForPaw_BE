plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id("org.sonarqube") version "4.1.0.3113"
}

group = 'com.hong'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// mongoDB
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	// MySQL
	implementation 'mysql:mysql-connector-java:8.0.33'

	// Oauth
	implementation group: 'com.auth0', name: 'java-jwt', version: '4.3.0'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Webflux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	//Querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// RabbitMQ
	implementation 'org.springframework.boot:spring-boot-starter-amqp'

	// WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// LocalDateTime을 직열화 하기 위해 필요
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// AWS
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.638'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// Thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// Jsoup
	implementation 'org.jsoup:jsoup:1.15.3'

	// Apache Commons Lang
	implementation 'org.apache.commons:commons-lang3:3.12.0'
}

sonarqube {
	properties {
		property "sonar.projectKey", "ForPaw_BE"
		property "sonar.host.url", "http://172.17.0.3:9000"
		property "sonar.login", "squ_7e46351e9303458c74fff5351a52d1e0179babf9"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}
tasks.named('test') {
	outputs.dir snippetsDir
	systemProperty 'file.encoding', 'UTF-8'
	useJUnitPlatform()
}